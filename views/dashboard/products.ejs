<!DOCTYPE html>
<html lang="en">
	<head>
		<%- include('../partials/head.ejs'); %>
	</head>
<body>
  <div id="preloader"></div>
  <div class="header">
    <%- include('../partials/header.ejs', {account: user?.name ?? "", car }); %>
  </div>
  <div class="container mt-5 pt-5">
    <h1>Dashboard</h1>
    <div class="row">
      <div class="col-md-4">
        <div class="card">
          <div class="card-header">
            <h4>Sections</h4>
          </div>
          <div class="card-body">
            <ul class="list-group">
              <li class="list-group-item">
                <a href="/dashboard/products">Products</a>
              </li>
              <li class="list-group-item">
                <a href="/dashboard/categories">Categories</a>
              </li>
              <li class="list-group-item">
                <a href="/dashboard/users">Users</a>
              </li>
              <li class="list-group-item">
                <a href="/dashboard/posts">Posts</a>
              </li>
            </ul>
          </div>
        </div>
      </div>
      <div class="col-md-8">
        <div class="card p-2">
          <form action="/dashboard/products" method="post" enctype="multipart/form-data" id="form-products">
              <div class="form-group">
                <label for="categoryId">Category:</label>
                <select class="form-control" id="categoryId" name="categoryId" required>
                  <option value="">Select a category</option>
                  <% categories.forEach(category => { %>
                    <option value="<%= category.id %>" data-template="<%= category.template %>"><%= category.name %></option>
                  <% }); %>
                </select>
              </div>

              <div class="form-group">
                <label for="label">Label:</label>
                <select class="form-control" id="label" name="label" required>
                  <option value="">Select a label</option>
                  <% Object.keys(product_label).forEach(label => { %>
                    <option value="<%= label %>"><%= product_label[label] %></option>
                  <% }); %>
                </select>
              </div>

              <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" class="form-control" id="name" name="name" required>
              </div>
              <div class="form-group d-none showDerma">
                <label for="description">Description:</label>
                <textarea class="form-control" id="description" name="description"></textarea>
              </div>
              <div class="form-group">
                <label for="price">Price:</label>
                <input type="number" class="form-control" id="price" name="price" required>
              </div>
              <div class="form-group">
                <label for="quantity">Quantity:</label>
                <input type="number" class="form-control" id="quantity" name="quantity" required>
              </div>
              <div class="form-group row">
                <div class="col-md-11">
                  <label for="sizes">Size:</label>
                  <input type="text" class="form-control" id="sizes" maxlength="10" />
                </div>
                <div class="col-md-1">
                  <br />
                  <div class="btn btn-success mt-2" onclick="addSize()">
                    <i class="fas fa-plus"></i>
                  </div>
                </div>
                <div class="col-md-12 d-none" id="box_sizes">
                  <table class="table table-striped table-bordered table-hover mt-2" id="sizes-items">
                    <thead>
                      <tr>
                        <th>Name</th>
                        <th>Action</th>
                      </tr>
                    </thead>
                    <tbody></tbody>
                  </table>
                </div>
              </div>
              <div class="form-group">
                <label for="assessment">Assessment:</label>
                <input type="number" class="form-control" id="assessment" name="assessment" min="0" value="0" required>
              </div>
              <div class="form-group">
                <label for="image">Images:</label>
                <input type="file" name="images" id="images" multiple required />
              </div>

              <div class="form-group d-none showDerma">
                <label for="name">Weight:</label>
                <input type="text" class="form-control" id="weight" name="weight" maxlength="25">
              </div>
              <div class="form-group d-none showDerma">
                <label for="name">Dimensions:</label>
                <input type="text" class="form-control" id="dimensions" name="dimensions" maxlength="25">
              </div>

              <div class="form-group d-none showSerum">
                <label for="keyBenefits">Key Benefits:</label>
                <textarea class="form-control" id="keyBenefits" name="keyBenefits"></textarea>
              </div>
              <div class="form-group d-none showDerma showSerum">
                <label for="howUse" id="text_howUse">How to use:</label>
                <textarea class="form-control" id="howUse" name="howUse"></textarea>
              </div>
              <div class="form-group d-none showSerum">
                <label for="ingredients">Full ingredients list:</label>
                <textarea class="form-control" id="ingredients" name="ingredients"></textarea>
              </div>
              <div class="form-group d-none showDerma showSerum">
                <label for="caution" id="text_caution">Caution:</label>
                <textarea class="form-control" id="caution" name="caution"></textarea>
              </div>

              <button type="submit" class="btn btn-primary" id="button_submit">Submit</button>
              <button class="btn btn-secondary d-none" id="button_cancel" onclick="cancel()">Cancel</button>
          </form>
        </div>

        <div class="card mt-2">
          <div class="card-header">
            <h4>Products</h4>
          </div>
          <table class='table table-striped table-bordered table-hover'>
            <thead>
              <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Sizes</th>
                <th>Assessment</th>
                <th>Weight</th>
                <th>Dimensions</th>
                <th class="text-center">Action</th>
              </tr>
            </thead>
            <% products.map(product => { %>
              <tr>
                <td id="<%= product.id %>-name"><%= product.name %></td>
                <td><%= product.price %>$</td>
                <td><%= product.quantity %></td>
                <td><%= product.sizes %></td>
                <td><%= product.assessment %></td>
                <td><%= product.weight %></td>
                <td><%= product.dimensions %></td>
                <td class="text-center">
                  <button class="btn btn-success" onclick="showEdit('<%= product.id %>')">
                    <i class="fas fa-edit"></i>
                  </button>
                  <button class="btn btn-danger" onclick="confirmDelete('<%= product.id %>')">
                    <i class="fas fa-trash"></i>
                  </button>
                </td>
              </tr>
            <% }) %>
          </table>
        </div>
      </div>
    </div>
  </div>

  <%- include('../partials/script.ejs'); %>

  <script>
let currentSizes = [];
let editId = null;

// Obtener todos los elementos de formulario del documento
let forms = document.querySelectorAll("form");

// Recorrer cada elemento de formulario
for (let form of forms) {
  // Agregar un evento de submit al formulario
  form.addEventListener("submit", function (event) {
    // Prevenir el comportamiento por defecto de enviar el formulario
    event.preventDefault();

    if (currentSizes.length === 0) {
      Swal.fire(
        'Required field!',
        'The required size field.',
        'error'
      )

      return false;
    }

    // Obtener la URL del action del formulario
    let action = form.getAttribute("action");

    // Obtener los datos del formulario como un objeto FormData
    let formData = new FormData(form);

    const method = editId ? "PUT" : "POST";

    currentSizes.forEach(currentSize => {
      formData.append('sizes[]', currentSize);
    });

    if (editId) {
      formData.append("id", editId);
    }

    fetch(action, {
      method,
      body: formData,
      redirect: "follow",
    })
      .then(async (response) => {
        if (response.ok) {
          currentSizes = [];
          const jsonData = await response.json();
          await Swal.fire("Success!", jsonData.message, "success");
          if (jsonData?.redirect) window.location.href = jsonData.redirect;
          else window.location.reload();
        } else {
          // Si hay algún error, mostrar un mensaje
          Swal.fire({
            text: response.statusText,
            icon: "error",
          });
        }
      })
      .catch((error) => {
        // Si hay algún error de red, mostrar un mensaje
        alert("Error de red: " + error);
      })
  });
}

$( document ).ready(function() {
  $('#categoryId').on('change', function() {
    const template = $(this).children('option:selected').data('template');

    toggleShowInputs(template);
  });
})

function toggleShowInputs(template) {
  switch (template) {
    case 'TEMPLATE_ONE':
      $('.showDerma').addClass('d-none');
      $('.showSerum').removeClass('d-none');
      $('#text_howUse').text('How to use:');
      $('#text_caution').text('Caution:');
    break;
    default:
      $('.showSerum').addClass('d-none');
      $('.showDerma').removeClass('d-none');
      $('#text_howUse').text('Instructions:');
      $('#text_caution').text('Precaution & Possible Side Effects:');
  }
}

function confirmDelete(id) {
  const name = $(`#${id}-name`).text();
  Swal.fire({
    title: 'Are you sure?',
    text: `Will remove the product: ${name}`,
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Yes, delete it!'
  }).then((result) => {
    if (result.isConfirmed) {
      $.ajax({
        url: `products/${id}`,
        type: 'DELETE',
        success: function(result) {
          Swal.fire(
            'Deleted!',
            'Your product has been deleted.',
            'success'
          )

          setTimeout(function () {
            window.location.reload();
          }, 300);
        },
        error: function (request, status, error) {
          Swal.fire(
            'Failed to delete!',
            request.responseJSON.message,
            'error'
          )
        }
      });
    }
  });
}

function showEdit(id) {
  editId = id;

  $.ajax({
    url: `products/${id}`,
    type: 'GET',
    success: function(result) {
      const product = result.data;

      toggleShowInputs(product.category.template);

      $('#categoryId').val(product.category.id).change();
      $('#label').val(product.label).change();
      $('#name').val(product.name);
      $('#description').val(product.description);
      $('#price').val(product.price);
      $('#quantity').val(product.quantity);
      $('#assessment').val(product.assessment);
      $('#weight').val(product.weight);
      $('#dimensions').val(product.dimensions);
      $('#keyBenefits').val(product.keyBenefits);
      $('#howUse').val(product.howUse);
      $('#ingredients').val(product.ingredients);
      $('#caution').val(product.caution);

      $('#sizes-items tbody').html('');

      currentSizes = [];

      let index = 0;
      product.sizes.forEach(size => {
        if (size !== '') {
          currentSizes.push(size);
          $('#sizes-items tbody').html(
            $('#sizes-items tbody').html() +
            `<tr id="size-${index}">
              <td>${size}</td>
              <td>
                <button class="btn btn-danger" onclick="deleteSize(${index})">
                  <i class="fas fa-trash"></i>
                </button>
              </td>
            </tr>`
          );
          index++;
        }
      });

      $('#box_sizes').removeClass('d-none');

      $('#button_submit').text('Update');
      $('#button_cancel').removeClass('d-none');

      $('#images').prop('required', false);
    }
  });
}

function cancel() {
  editId = null;
  $('#button_submit').text('Submit');
  $('#button_cancel').addClass('d-none');
  $('#images').prop('required', true);

  $('#categoryId').val('').change();
  $('#label').val('').change();
  $('#name').val('');
  $('#description').val('');
  $('#price').val('');
  $('#quantity').val('');
  $('#assessment').val('');
  $('#weight').val('');
  $('#dimensions').val('');
  $('#keyBenefits').val('');
  $('#howUse').val('');
  $('#ingredients').val('');
  $('#caution').val('');

  $('#sizes-items tbody').html('');
  currentSizes = [];

  $('.showDerma').addClass('d-none');
  $('.showSerum').addClass('d-none');
}

function addSize() {
  const sizes = $('#sizes').val();

  if ($.trim(sizes) !== '') {
    currentSizes.push(sizes);
    const index = currentSizes.length - 1;

    $('#sizes-items tbody').html(
      $('#sizes-items tbody').html() +
      `<tr id="size-${index}">
        <td>${sizes}</td>
        <td>
          <button class="btn btn-danger" onclick="deleteSize(${index})">
            <i class="fas fa-trash"></i>
          </button>
        </td>
      </tr>`
    );

    $('#sizes').val('');
    $('#box_sizes').removeClass('d-none');
  }
}

function deleteSize(id) {
  currentSizes.splice(id, 1);
  $(`#size-${id}`).remove();

  if (currentSizes.length === 0) {
    $('#box_sizes').addClass('d-none');
  }
}
  </script>

</body>
</html>